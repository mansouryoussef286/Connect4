<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        oGOXXf4fT4MGzMX9aAIAAAAASUVORK5CYII=
</value>
  </data>
</root>